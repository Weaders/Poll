// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Poll.Models;

namespace Poll.Migrations
{
    [DbContext(typeof(DefaultContext))]
    partial class DefaultContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Poll.Models.PollAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuestionId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionId = 1,
                            Text = "Мужской"
                        },
                        new
                        {
                            Id = 2,
                            QuestionId = 1,
                            Text = "Женский"
                        },
                        new
                        {
                            Id = 3,
                            QuestionId = 2,
                            Text = "Apple"
                        },
                        new
                        {
                            Id = 4,
                            QuestionId = 2,
                            Text = "Samsung"
                        },
                        new
                        {
                            Id = 5,
                            QuestionId = 2,
                            Text = "LG"
                        },
                        new
                        {
                            Id = 6,
                            QuestionId = 2,
                            Text = "Nokia"
                        },
                        new
                        {
                            Id = 7,
                            QuestionId = 2,
                            Text = "Другое"
                        });
                });

            modelBuilder.Entity("Poll.Models.PollQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuestionType");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionType = 0,
                            Text = "Укажите ваш пол"
                        },
                        new
                        {
                            Id = 2,
                            QuestionType = 1,
                            Text = "Марка вашего телефона"
                        });
                });

            modelBuilder.Entity("Poll.Models.UserAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("QuestionId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("UserAnswers");
                });

            modelBuilder.Entity("Poll.Models.UserAnswerSelectData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnswerId");

                    b.Property<int?>("UserAnswerId");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("UserAnswerId");

                    b.ToTable("AnswerSelectData");
                });

            modelBuilder.Entity("Poll.Models.PollAnswer", b =>
                {
                    b.HasOne("Poll.Models.PollQuestion", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Poll.Models.UserAnswer", b =>
                {
                    b.HasOne("Poll.Models.PollQuestion", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("Poll.Models.UserAnswerSelectData", b =>
                {
                    b.HasOne("Poll.Models.PollAnswer", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerId");

                    b.HasOne("Poll.Models.UserAnswer", "UserAnswer")
                        .WithMany()
                        .HasForeignKey("UserAnswerId");
                });
#pragma warning restore 612, 618
        }
    }
}
